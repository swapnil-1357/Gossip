version: '3.8'

services:
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build: .
    ports:
      - "5000:5000"
    depends_on:
      redis:
        condition: service_healthy
    environment:
      - NODE_ENV=development
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    volumes:
      - .:/app
      - /app/node_modules
    command: npm run dev

  # For scaling - run multiple app instances
  app2:
    build: .
    ports:
      - "5001:5000"
    depends_on:
      redis:
        condition: service_healthy
    environment:
      - NODE_ENV=development
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    volumes:
      - .:/app
      - /app/node_modules
    command: npm run dev

  # Load balancer (optional)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    depends_on:
      - app
      - app2
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    command: nginx -g 'daemon off;'

volumes:
  redis_data: